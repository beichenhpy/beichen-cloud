server:
  port: 23331
spring:
  application:
    name: article
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        enabled: true
        #beichen-dev
        namespace: fcb46db4-0c13-4f69-85d4-d23bacdffd7a
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: beichenhpy
    url: jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true
    hikari:
      # 连接池最大连接数
      maximum-pool-size: 12
      # 空闲时保持最小连接数
      minimum-idle: 5
      # 空闲连接存活时间
      idle-timeout: 300000
      # 连接超时时间
      connection-timeout: 20000
      # 测试sql
      connection-test-query: select 1
      pool-name: beichen
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    banner: false
    db-config:
      id-type: assign_id


#feign-config
feign:
  hystrix:
    enabled: true
  # 压缩配置
  compression:
    request:
      enabled: true
      # 配置压缩支持的MIME TYPE
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048  # 配置压缩数据大小的下限
    response:
      enabled: true # 配置响应GZIP压缩
logging:
  level:
    # log 1.配置好Configuration 2.yml中配置package: debug
    cn.beichenhpy.service.feign: debug
# 全局参数设置-ribbon+hystrix 计算后来判断是否使用hystrix熔断
hystrix:
  command:
    #配置服务降级全局超时时间
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000
        timeout:
          enabled: true #开启hystrix,为false将超时控制交给ribbon

# 也是控制超时时间，但是不会进入fallback 会报错，交给hystrix才能熔断降级 hystrix的时间由ribbon计算，(1 + MaxAutoRetries + MaxAutoRetriesNextServer) * ReadTimeout
ribbon:
  MaxAutoRetries: 0 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试，如果eureka中找不到服务则直接走断路器
  MaxAutoRetriesNextServer: 1 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 5000 #请求处理的超时时间